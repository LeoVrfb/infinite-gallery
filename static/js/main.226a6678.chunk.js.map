{"version":3,"sources":["Components/InfiniteScroll/InfiniteScroll.js","App.js","index.js"],"names":["InfiniteScroll","useState","dataImg","setDataImg","pageIndex","setPageIndex","searchState","setSearchState","firstCall","setFirstCall","useEffect","fetch","then","response","json","data","imgsReceived","results","forEach","img","push","urls","regular","newFreshState","index","i","j","slice","inpRef","useRef","window","addEventListener","infiniteCheck","removeEventListener","console","log","document","documentElement","scrollTop","scrollHeight","clientHeight","className","onSubmit","e","preventDefault","current","value","htmlFor","type","id","ref","map","src","alt","uuidv4","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"gOAIe,SAASA,IAGpB,MAA8BC,mBAAS,CAAC,GAAI,GAAI,KAAhD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,mBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAsCJ,mBAAS,UAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KA8DAC,qBAAU,WACHF,GA9BHG,MAAM,+CAAD,OAAgDP,EAAhD,8BAA+EE,EAA/E,2DAAoJM,MAAK,SAACC,GAC/J,OAAOA,EAASC,UAEfF,MAAK,SAACG,GAEH,IAAMC,EAAe,GACrBD,EAAKE,QAAQC,SAAQ,SAACC,GAClBH,EAAaI,KAAKD,EAAIE,KAAKC,YAU/B,IAPA,IAAMC,EAAgB,CAClB,GACA,GACA,IAGAC,EAAQ,EACJC,EAAI,EAAGA,EAAI,EAAGA,IAClB,IAAI,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACnBH,EAAcE,GAAGL,KAAKJ,EAAaQ,IACnCA,IAIRrB,EAAWoB,QAQhB,CAACjB,IAEJI,qBAAU,WA9DNC,MAAM,+CAAD,OAAgDP,EAAhD,8BAA+EE,EAA/E,2DAAoJM,MAAK,SAACC,GAC/J,OAAOA,EAASC,UAEfF,MAAK,SAACG,GAEH,IAAMC,EAAe,GACrBD,EAAKE,QAAQC,SAAQ,SAACC,GAClBH,EAAaI,KAAKD,EAAIE,KAAKC,YAM/B,IAHA,IAAMC,EAAgBrB,EAAQyB,QAE1BH,EAAQ,EACJC,EAAI,EAAGA,EAAI,EAAGA,IAClB,IAAI,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACnBH,EAAcE,GAAGL,KAAKJ,EAAaQ,IACnCA,IAIRrB,EAAWoB,GACXd,GAAa,QA2ClB,CAACL,IAEJ,IAQMwB,EAASC,mBAEfnB,qBAAU,WAGN,OAFAoB,OAAOC,iBAAiB,SAAUC,GAE3B,WACHF,OAAOG,oBAAoB,SAAUD,MAE1C,IAEH,IAAMA,EAAgB,WAClBE,QAAQC,IAAI,iBACZ,MAAgDC,SAASC,gBAAlDC,EAAP,EAAOA,UAAP,EAAkBC,aAEAD,IAFlB,EAAgCE,eAG5BN,QAAQC,IAAI,UACZ9B,GAAa,SAAAD,GAAS,OAAIA,EAAY,OAK9C,OACI,sBAAKqC,UAAU,YAAf,UACQ,uBAAMC,SA/BG,SAAAC,GACjBA,EAAEC,iBAEFrC,EAAeqB,EAAOiB,QAAQC,OAC9BzC,EAAa,IA2BL,UACI,uBAAO0C,QAAQ,SAAf,6BACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKtB,OAGxC,sBAAKa,UAAU,YAAf,UACI,8BACKvC,EAAQ,GAAGiD,KAAI,SAAAhC,GACZ,OAAO,qBAAoBiC,IAAKjC,EAAKkC,IAAI,kBAAxBC,oBAGzB,8BACKpD,EAAQ,GAAGiD,KAAI,SAAAhC,GACZ,OAAO,qBAAoBiC,IAAKjC,EAAKkC,IAAI,kBAAxBC,oBAGzB,8BACKpD,EAAQ,GAAGiD,KAAI,SAAAhC,GACZ,OAAO,qBAAoBiC,IAAKjC,EAAKkC,IAAI,kBAAxBC,0BCrH9BC,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtB,SAASuB,eAAe,U","file":"static/js/main.226a6678.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef} from 'react'\r\nimport './InfiniteScroll.css'\r\nimport {v4 as uuidv4} from 'uuid'\r\n\r\nexport default function InfiniteScroll() {\r\n\r\n\r\n    const [dataImg, setDataImg] = useState([[], [], []])\r\n    const [pageIndex, setPageIndex] = useState(1)\r\n    const [searchState, setSearchState] = useState('random')\r\n    const [firstCall, setFirstCall] = useState(true)\r\n\r\n\r\n    const infiniteFetchData = () => {\r\n\r\n        fetch(`https://api.unsplash.com/search/photos?page=${pageIndex}&per_page=30&query=${searchState}&client_id=_kDRd0Wh5FP1YqFAmZr4rqkU1vJpT8XUdlFtIgo39qc`).then((response) => {\r\n        return response.json()\r\n        })\r\n        .then((data) => {\r\n\r\n            const imgsReceived = [];\r\n            data.results.forEach((img) => {\r\n                imgsReceived.push(img.urls.regular)\r\n            })\r\n\r\n            const newFreshState = dataImg.slice();\r\n\r\n            let index = 0;\r\n            for(let i = 0; i < 3; i++) {\r\n                for(let j = 0; j < 10; j++) {\r\n                    newFreshState[i].push(imgsReceived[index])\r\n                    index++\r\n                }\r\n            }\r\n\r\n            setDataImg(newFreshState)\r\n            setFirstCall(false)\r\n\r\n    })\r\n    }\r\n\r\n    const searchFetchData = () => {\r\n\r\n        fetch(`https://api.unsplash.com/search/photos?page=${pageIndex}&per_page=30&query=${searchState}&client_id=_kDRd0Wh5FP1YqFAmZr4rqkU1vJpT8XUdlFtIgo39qc`).then((response) => {\r\n        return response.json()\r\n        })\r\n        .then((data) => {\r\n\r\n            const imgsReceived = [];\r\n            data.results.forEach((img) => {\r\n                imgsReceived.push(img.urls.regular)\r\n            })\r\n\r\n            const newFreshState = [\r\n                [],\r\n                [],\r\n                []\r\n            ];\r\n\r\n            let index = 0;\r\n            for(let i = 0; i < 3; i++) {\r\n                for(let j = 0; j < 10; j++) {\r\n                    newFreshState[i].push(imgsReceived[index])\r\n                    index++\r\n                }\r\n            }\r\n\r\n            setDataImg(newFreshState)\r\n\r\n    })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(firstCall) return;\r\n        searchFetchData()\r\n    }, [searchState])\r\n\r\n    useEffect(() => {\r\n        infiniteFetchData();\r\n    }, [pageIndex])\r\n\r\n    const handleSearch = e => {\r\n        e.preventDefault();\r\n\r\n        setSearchState(inpRef.current.value)\r\n        setPageIndex(1)\r\n\r\n    }\r\n\r\n    const inpRef = useRef();\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', infiniteCheck);\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', infiniteCheck)\r\n        }\r\n    }, [])\r\n\r\n    const infiniteCheck = () => {\r\n        console.log('hello check !');\r\n        const {scrollTop, scrollHeight, clientHeight} = document.documentElement;\r\n\r\n        if(scrollHeight - scrollTop === clientHeight) {\r\n            console.log('Bottom');\r\n            setPageIndex(pageIndex => pageIndex + 1)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n                <form onSubmit={handleSearch}>\r\n                    <label htmlFor=\"search\">Votre recherche</label>\r\n                    <input type=\"text\" id=\"search\" ref={inpRef} />\r\n                </form>\r\n\r\n                <div className=\"card-list\">\r\n                    <div>\r\n                        {dataImg[0].map(img => {\r\n                            return <img key={uuidv4()} src={img} alt=\"image unsplash\" />\r\n                        })}\r\n                    </div>\r\n                    <div>\r\n                        {dataImg[1].map(img => {\r\n                            return <img key={uuidv4()} src={img} alt=\"image unsplash\" />\r\n                        })}\r\n                    </div>\r\n                    <div>\r\n                        {dataImg[2].map(img => {\r\n                            return <img key={uuidv4()} src={img} alt=\"image unsplash\" />\r\n                        })}\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n","import InfiniteScroll from \"./Components/InfiniteScroll/InfiniteScroll\";\nimport React from 'react'\n\n\n\nfunction App() {\n  return (\n    <div>\n      <InfiniteScroll/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}